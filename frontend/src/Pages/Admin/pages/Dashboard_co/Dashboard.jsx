import React, { useState, useEffect } from "react";
import {
  FaChild,
  FaCalendarCheck,
  FaUserMd,
  FaClipboardList,
  FaChartBar,
  FaSync,
} from "react-icons/fa";
import "./Dashboard.css";
import dashboardService from "./services/dashboardService";
import {
  UserRoleChart,
  HealthStatusChart,
  VaccinationProgressChart,
  VaccinationPlansStatusChart,
  HealthCheckupResponseChart,
  MedicalEventsSeverityChart,
  ConsultationTypesChart,
  BMIByGradeChart,
  HealthCampaignStatusChart,
  StudentsByGradeChart,
  MedicationApprovalStatusChart,
  MedicationConsumptionStatusChart,
  VaccinationTypeChart,
} from "./components/ChartComponents";

const Dashboard = () => {
  // State cho d·ªØ li·ªáu dashboard
  const [dashboardData, setDashboardData] = useState({
    userStats: null,
    healthCheckupReport: null,
    vaccinationReport: null,
    medicalEventsStats: null,
    consultationStats: null,
    bmiStats: null,
    healthCampaignStats: null,
    recentEvents: null,
    recentVaccinationPlans: null,
    studentsGradeData: null,
    medicationStats: null,
    vaccinationTypeStats: null,
  });

  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  // D·ªØ li·ªáu th·ªëng k√™ c∆° b·∫£n
  const [stats, setStats] = useState({
    totalStudents: 1250,
    totalMedicalEvents: 15,
    upcomingEvents: 3,
    pendingReports: 8,
  });

  // Get recentEvents from dashboardData or use fallback
  const recentEvents = dashboardData.recentEvents || [
    {
      id: 1,
      title: "Ki·ªÉm tra s·ª©c kh·ªèe ƒë·ªãnh k·ª≥ K1-K5",
      date: "20/06/2025",
      type: "health-campaign",
      status: "ongoing",
    },
    {
      id: 2,
      title: "Chi·∫øn d·ªãch ti√™m ch·ªßng m√πa h√®",
      date: "15/06/2025",
      type: "health-campaign",
      status: "completed",
    },
    {
      id: 3,
      title: "Kh√°m s√†ng l·ªçc rƒÉng mi·ªáng",
      date: "10/06/2025",
      type: "health-campaign",
      status: "upcoming",
    },
  ];

  // C·∫£nh b√°o y t·∫ø
  const healthAlerts = [
    {
      id: 1,
      title: "C·∫£nh b√°o d·ªãch c√∫m m√πa",
      severity: "medium",
      date: "24/06/2025",
      description:
        "Ph√°t hi·ªán m·ªôt s·ªë ca c√∫m m√πa trong khu v·ª±c, c·∫ßn theo d√µi v√† th·ª±c hi·ªán bi·ªán ph√°p ph√≤ng ng·ª´a.",
    },
    {
      id: 2,
      title: "H·ªçc sinh c√≥ tri·ªáu ch·ª©ng s·ªët",
      severity: "high",
      date: "23/06/2025",
      description: "5 h·ªçc sinh l·ªõp 3B b√°o c√°o c√≥ tri·ªáu ch·ª©ng s·ªët v√† ƒëau h·ªçng.",
    },
    {
      id: 3,
      title: "Nh·∫Øc nh·ªü ki·ªÉm tra s·ª©c kh·ªèe",
      severity: "low",
      date: "22/06/2025",
      description:
        "L·ªõp 2C c·∫ßn ho√†n th√†nh ki·ªÉm tra s·ª©c kh·ªèe ƒë·ªãnh k·ª≥ trong tu·∫ßn n√†y.",
    },
  ];

  // H√†m load d·ªØ li·ªáu dashboard
  const loadDashboardData = async () => {
    setLoading(true);
    setError(null);

    try {
      // Load t·∫•t c·∫£ d·ªØ li·ªáu song song
      const [
        userStats,
        healthCheckupReport,
        vaccinationReport,
        medicalEventsStats,
        consultationStats,
        bmiStats,
        healthCampaignStats,
        recentEvents,
        recentVaccinationPlans,
        studentsGradeData,
        medicationStats,
        vaccinationTypeStats,
      ] = await Promise.all([
        dashboardService.getUserStatistics(),
        dashboardService.getHealthCheckupReport(),
        dashboardService.getVaccinationReport(),
        dashboardService.getMedicalEventsStatistics(),
        dashboardService.getConsultationStatistics(),
        dashboardService.getBMIStatisticsByGrade(),
        dashboardService.getHealthCampaignStatistics(),
        dashboardService.getRecentHealthCampaigns(5), // Limit to 5 recent campaigns
        dashboardService.getRecentVaccinationPlans(5), // Limit to 5 recent vaccination plans
        dashboardService.getStudentsByGradeLevel(),
        dashboardService.getMedicationInstructionStatistics(),
        dashboardService.getVaccinationTypeStatistics(),
      ]);

      setDashboardData({
        userStats,
        healthCheckupReport,
        vaccinationReport,
        medicalEventsStats,
        consultationStats,
        bmiStats,
        healthCampaignStats,
        recentEvents,
        recentVaccinationPlans,
        studentsGradeData,
        medicationStats,
        vaccinationTypeStats,
      });

      // C·∫≠p nh·∫≠t stats c∆° b·∫£n
      setStats((prev) => ({
        ...prev,
        totalStudents: healthCheckupReport.total || prev.totalStudents,
        totalMedicalEvents: medicalEventsStats.total || prev.totalMedicalEvents,
        upcomingEvents: vaccinationReport.pending || prev.upcomingEvents,
        pendingReports: consultationStats.stats.unread || prev.pendingReports,
      }));
    } catch (err) {
      console.error("Error loading dashboard data:", err);
      setError("Kh√¥ng th·ªÉ t·∫£i d·ªØ li·ªáu dashboard. S·ª≠ d·ª•ng d·ªØ li·ªáu m·∫´u.");
    } finally {
      setLoading(false);
    }
  };

  // Load d·ªØ li·ªáu khi component mount
  useEffect(() => {
    loadDashboardData();
  }, []);

  // H√†m refresh d·ªØ li·ªáu
  const handleRefresh = () => {
    loadDashboardData();
  };

  return (
    <div className="admin_ui_dash_content">
      {/* Header v·ªõi n√∫t refresh */}
      <div className="admin_ui_dash_header">
        <div className="admin_ui_dash_header_content">
          <div>
            <h1>T·ªïng quan Y t·∫ø h·ªçc ƒë∆∞·ªùng</h1>
          </div>
        </div>
      </div>

      {/* Hi·ªÉn th·ªã l·ªói n·∫øu c√≥ */}
      {error && (
        <div className="admin_ui_dash_error_banner">
          <span>{error}</span>
        </div>
      )}

      {/* Hi·ªÉn th·ªã th√¥ng b√°o fallback data */}
      {!loading &&
        (dashboardData.userStats?.usingFallback ||
          dashboardData.studentsGradeData?.usingFallback ||
          dashboardData.medicationStats?.usingFallback ||
          dashboardData.vaccinationTypeStats?.usingFallback ||
          dashboardData.healthCampaignStats?.usingFallback ||
          dashboardData.medicalEventsStats?.usingFallback ||
          dashboardData.bmiStats?._metadata?.usingFallback) && (
          <div className="admin_ui_dash_info_banner">
            <span>
              üìä ƒêang hi·ªÉn th·ªã d·ªØ li·ªáu m·∫´u do c∆° s·ªü d·ªØ li·ªáu ch∆∞a c√≥ d·ªØ li·ªáu th·ª±c
              t·∫ø. D·ªØ li·ªáu s·∫Ω t·ª± ƒë·ªông c·∫≠p nh·∫≠t khi c√≥ th√¥ng tin m·ªõi.
            </span>
          </div>
        )}

      {/* Th·ªëng k√™ t·ªïng quan */}
      {/* <div className="admin_ui_dash_stats-container">
        <div className="admin_ui_dash_stat-card">
          <div className="admin_ui_dash_stat-icon students">
            <FaChild />
          </div>
          <div className="admin_ui_dash_stat-details">
            <h3>T·ªïng s·ªë h·ªçc sinh</h3>
            <p className="admin_ui_dash_stat-value">{stats.totalStudents}</p>
          </div>
        </div>

        <div className="admin_ui_dash_stat-card">
          <div className="admin_ui_dash_stat-icon events">
            <FaCalendarCheck />
          </div>
          <div className="admin_ui_dash_stat-details">
            <h3>S·ª± ki·ªán y t·∫ø nƒÉm nay</h3>
            <p className="admin_ui_dash_stat-value">{stats.totalMedicalEvents}</p>
          </div>
        </div>

        <div className="admin_ui_dash_stat-card">
          <div className="admin_ui_dash_stat-icon upcoming">
            <FaUserMd />
          </div>
          <div className="admin_ui_dash_stat-details">
            <h3>K·∫ø ho·∫°ch ti√™m ch·ªßng ƒëang ch·ªù</h3>
            <p className="admin_ui_dash_stat-value">{stats.upcomingEvents}</p>
          </div>
        </div>

        <div className="admin_ui_dash_stat-card">
          <div className="admin_ui_dash_stat-icon reports">
            <FaClipboardList />
          </div>
          <div className="admin_ui_dash_stat-details">
            <h3>B√°o c√°o ch·ªù x·ª≠ l√Ω</h3>
            <p className="admin_ui_dash_stat-value">{stats.pendingReports}</p>
          </div>
        </div>
      </div> */}
      <div className="admin_ui_dash_stats-container">
        {/* Ph·∫ßn s·ª± ki·ªán v√† c·∫£nh b√°o */}
        <div className="admin_ui_dash_content-grid">
          {/* Recent Medical Events */}
          <div className="admin_ui_dash_card events-list">
            <div className="admin_ui_dash_card-header">
              <h2>S·ª± ki·ªán y t·∫ø g·∫ßn ƒë√¢y</h2>
              {/* <button className="admin_ui_dash_view-all-btn">Xem t·∫•t c·∫£</button> */}
            </div>
            <div className="admin_ui_dash_card-content">
              <table className="admin_ui_dash_events-table">
                <thead>
                  <tr>
                    <th>T√™n s·ª± ki·ªán</th>
                    <th>Ng√†y</th>
                    <th>Tr·∫°ng th√°i</th>
                  </tr>
                </thead>
                <tbody>
                  {recentEvents.map((event) => (
                    <tr key={event.id}>
                      <td>{event.title}</td>
                      <td>{event.date}</td>
                      <td>
                        <span
                          className={`admin_ui_dash_event-status-tag ${event.status}`}
                        >
                          {event.status === "completed"
                            ? "Ho√†n th√†nh"
                            : event.status === "upcoming"
                            ? "S·∫Øp di·ªÖn ra"
                            : event.status === "in-progress"
                            ? "ƒêang di·ªÖn ra"
                            : "T·∫°m ho√£n"}
                        </span>
                      </td>
                    </tr>
                  ))}
                </tbody>
              </table>
            </div>
          </div>
        </div>
        {/* Recent Vaccination Plans */}
        <div className="admin_ui_dash_card events-list">
          <div className="admin_ui_dash_card-header">
            <h2>K·∫ø ho·∫°ch ti√™m ch·ªßng g·∫ßn ƒë√¢y</h2>
            {/* <button className="admin_ui_dash_view-all-btn">Xem t·∫•t c·∫£</button> */}
          </div>
          <div className="admin_ui_dash_card-content">
            <table className="admin_ui_dash_events-table">
              <thead>
                <tr>
                  <th>T√™n k·∫ø ho·∫°ch</th>
                  <th>Ng√†y ti√™m</th>
                  <th>Tr·∫°ng th√°i</th>
                </tr>
              </thead>
              <tbody>
                {(dashboardData.recentVaccinationPlans || []).map((plan) => (
                  <tr key={plan.id}>
                    <td>{plan.name}</td>
                    <td>{plan.date}</td>
                    <td>
                      <span
                        className={`admin_ui_dash_event-status-tag ${plan.status}`}
                      >
                        {plan.status === "completed"
                          ? "Ho√†n th√†nh"
                          : plan.status === "upcoming"
                          ? "S·∫Øp di·ªÖn ra"
                          : plan.status === "in-progress"
                          ? "ƒêang ti·∫øn h√†nh"
                          : plan.status === "cancelled"
                          ? "ƒê√£ h·ªßy"
                          : "Ch·ªù x·ª≠ l√Ω"}
                      </span>
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>
      </div>

      {/* Section bi·ªÉu ƒë·ªì */}
      <div className="admin_ui_dash_charts-section">
        {/* <div className="admin_ui_dash_section-header">
          <h2>
            <FaChartBar /> Th·ªëng k√™ v√† Bi·ªÉu ƒë·ªì
          </h2>
        </div> */}

        {/* H√†ng 1: User Role Chart & Students by Grade Chart */}
        <div className="admin_ui_dash_charts-row">
          <div className="admin_ui_dash_chart-card">
            <div className="admin_ui_dash_chart-header">
              <h3>Ph√¢n b·ªï ng∆∞·ªùi d√πng h·ªá th·ªëng</h3>
              {dashboardData.userStats && (
                <span className="admin_ui_dash_chart-subtitle">
                  T·ªïng: {dashboardData.userStats.total} ng∆∞·ªùi d√πng
                </span>
              )}
            </div>
            <div className="admin_ui_dash_chart-content">
              {loading ? (
                <div className="admin_ui_dash_chart-loading">ƒêang t·∫£i...</div>
              ) : dashboardData.userStats ? (
                <UserRoleChart data={dashboardData.userStats} />
              ) : (
                <div className="admin_ui_dash_chart-error">Kh√¥ng c√≥ d·ªØ li·ªáu</div>
              )}
            </div>
          </div>

          <div className="admin_ui_dash_chart-card">
            <div className="admin_ui_dash_chart-header">
              <h3>S·ªë l∆∞·ª£ng h·ªçc sinh theo kh·ªëi l·ªõp</h3>
              {dashboardData.studentsGradeData && (
                <span className="admin_ui_dash_chart-subtitle">
                  T·ªïng: {dashboardData.studentsGradeData.total} h·ªçc sinh
                </span>
              )}
            </div>
            <div className="admin_ui_dash_chart-content">
              {loading ? (
                <div className="admin_ui_dash_chart-loading">ƒêang t·∫£i...</div>
              ) : dashboardData.studentsGradeData ? (
                <StudentsByGradeChart data={dashboardData.studentsGradeData} />
              ) : (
                <div className="admin_ui_dash_chart-error">
                  <p>Kh√¥ng c√≥ d·ªØ li·ªáu h·ªçc sinh theo kh·ªëi l·ªõp</p>
                  <button
                    onClick={() => window.dashboardService?.testStudentsAPI?.()}
                    style={{
                      fontSize: "12px",
                      padding: "4px 8px",
                      marginTop: "8px",
                    }}
                  >
                    Test API
                  </button>
                </div>
              )}
            </div>
          </div>
        </div>

        {/* H√†ng 2: Health Status Chart & Health Campaign Status Chart */}
        <div className="admin_ui_dash_charts-row">
          {/* <div className="admin_ui_dash_chart-card">
            <div className="admin_ui_dash_chart-header">
              <h3>Ph√¢n lo·∫°i s·ª©c kh·ªèe h·ªçc sinh</h3>
              <span className="admin_ui_dash_chart-subtitle">
                D·ª±a tr√™n k·∫øt qu·∫£ kh√°m g·∫ßn nh·∫•t
              </span>
            </div>
            <div className="admin_ui_dash_chart-content">
              <HealthStatusChart />
            </div>
          </div> */}

          <div className="admin_ui_dash_chart-card">
            <div className="admin_ui_dash_chart-header">
              <h3>Tr·∫°ng th√°i chi·∫øn d·ªãch s·ª©c kh·ªèe</h3>
              {dashboardData.healthCampaignStats && (
                <span className="admin_ui_dash_chart-subtitle">
                  T·ªïng: {dashboardData.healthCampaignStats.total} chi·∫øn d·ªãch
                </span>
              )}
            </div>
            <div className="admin_ui_dash_chart-content">
              {loading ? (
                <div className="admin_ui_dash_chart-loading">ƒêang t·∫£i...</div>
              ) : dashboardData.healthCampaignStats ? (
                <HealthCampaignStatusChart
                  data={dashboardData.healthCampaignStats}
                />
              ) : (
                <div className="admin_ui_dash_chart-error">
                  <p>Kh√¥ng c√≥ d·ªØ li·ªáu chi·∫øn d·ªãch s·ª©c kh·ªèe</p>
                  <button
                    onClick={() =>
                      window.dashboardService?.testHealthCampaignsAPI?.()
                    }
                    style={{
                      fontSize: "12px",
                      padding: "4px 8px",
                      marginTop: "8px",
                    }}
                  >
                    Test API
                  </button>
                </div>
              )}
            </div>
          </div>
        </div>

        {/* H√†ng 3: Vaccination Progress & Health Checkup Response
        <div className="charts-row">
          <div className="chart-card">
            <div className="chart-header">
              <h3>Th·ªëng k√™ k·∫ø ho·∫°ch ti√™m ch·ªßng</h3>
              {dashboardData.vaccinationReport && (
                <span className="chart-subtitle">
                  T·ªïng: {dashboardData.vaccinationReport.total} k·∫ø ho·∫°ch
                </span>
              )}
            </div>
            <div className="chart-content">
              {loading ? (
                <div className="chart-loading">ƒêang t·∫£i...</div>
              ) : dashboardData.vaccinationReport ? (
                <VaccinationPlansStatusChart
                  data={dashboardData.vaccinationReport}
                />
              ) : (
                <div className="chart-error">
                  <p>Kh√¥ng c√≥ d·ªØ li·ªáu k·∫ø ho·∫°ch ti√™m ch·ªßng</p>
                  <button 
                    onClick={() => window.dashboardService?.testVaccinationPlansAPI?.()}
                    style={{fontSize: '12px', padding: '4px 8px', marginTop: '8px'}}
                  >
                    Test API
                  </button>
                </div>
              )}
            </div>
          </div>

          <div className="chart-card">
            <div className="chart-header">
              <h3>T·ª∑ l·ªá ph·∫£n h·ªìi kh√°m s·ª©c kh·ªèe</h3>
              {dashboardData.healthCheckupReport && (
                <span className="chart-subtitle">
                  T·ªïng: {dashboardData.healthCheckupReport.total} th√¥ng b√°o
                </span>
              )}
            </div>
            <div className="chart-content">
              {loading ? (
                <div className="chart-loading">ƒêang t·∫£i...</div>
              ) : dashboardData.healthCheckupReport ? (
                <HealthCheckupResponseChart
                  data={dashboardData.healthCheckupReport}
                />
              ) : (
                <div className="chart-error">Kh√¥ng c√≥ d·ªØ li·ªáu</div>
              )}
            </div>
          </div>
        </div> */}

        {/* H√†ng 4: Medical Events Severity & Vaccination Type Chart */}
        <div className="admin_ui_dash_charts-row">
          <div className="admin_ui_dash_chart-card">
            <div className="admin_ui_dash_chart-header">
              <h3>S·ª± c·ªë y t·∫ø theo m·ª©c ƒë·ªô nghi√™m tr·ªçng</h3>
              {dashboardData.medicalEventsStats && (
                <span className="admin_ui_dash_chart-subtitle">
                  T·ªïng: {dashboardData.medicalEventsStats.total} s·ª± c·ªë
                </span>
              )}
            </div>
            <div className="admin_ui_dash_chart-content">
              {loading ? (
                <div className="admin_ui_dash_chart-loading">ƒêang t·∫£i...</div>
              ) : dashboardData.medicalEventsStats ? (
                <MedicalEventsSeverityChart
                  data={dashboardData.medicalEventsStats}
                />
              ) : (
                <div className="admin_ui_dash_chart-error">
                  <p>Kh√¥ng c√≥ d·ªØ li·ªáu s·ª± c·ªë y t·∫ø</p>
                  <button
                    onClick={() =>
                      window.dashboardService?.testMedicalIncidentsAPI?.()
                    }
                    style={{
                      fontSize: "12px",
                      padding: "4px 8px",
                      marginTop: "8px",
                    }}
                  >
                    Test API
                  </button>
                </div>
              )}
            </div>
          </div>

          <div className="admin_ui_dash_chart-card">
            <div className="admin_ui_dash_chart-header">
              <h3>Ph√¢n lo·∫°i ti√™m ch·ªßng theo ngu·ªìn</h3>
              {dashboardData.vaccinationTypeStats && (
                <span className="admin_ui_dash_chart-subtitle">
                  T·ªïng: {dashboardData.vaccinationTypeStats.total} m≈©i ti√™m
                </span>
              )}
            </div>
            <div className="admin_ui_dash_chart-content">
              {loading ? (
                <div className="admin_ui_dash_chart-loading">ƒêang t·∫£i...</div>
              ) : dashboardData.vaccinationTypeStats ? (
                <VaccinationTypeChart
                  data={dashboardData.vaccinationTypeStats}
                />
              ) : (
                <div className="admin_ui_dash_chart-error">
                  <p>Kh√¥ng c√≥ d·ªØ li·ªáu ph√¢n lo·∫°i ti√™m ch·ªßng</p>
                  <button
                    onClick={() =>
                      window.dashboardService?.testVaccinationsAPI?.()
                    }
                    style={{
                      fontSize: "12px",
                      padding: "4px 8px",
                      marginTop: "8px",
                    }}
                  >
                    Test API
                  </button>
                </div>
              )}
            </div>
          </div>
        </div>

        {/* H√†ng 5: Medication Status Charts */}
        <div className="admin_ui_dash_charts-row">
          <div className="admin_ui_dash_chart-card">
            <div className="admin_ui_dash_chart-header">
              <h3>Tr·∫°ng th√°i ph√™ duy·ªát thu·ªëc</h3>
              {dashboardData.medicationStats && (
                <span className="admin_ui_dash_chart-subtitle">
                  T·ªïng: {dashboardData.medicationStats.approvalStats.total} y√™u
                  c·∫ßu
                </span>
              )}
            </div>
            <div className="admin_ui_dash_chart-content">
              {loading ? (
                <div className="admin_ui_dash_chart-loading">ƒêang t·∫£i...</div>
              ) : dashboardData.medicationStats ? (
                <MedicationApprovalStatusChart
                  data={dashboardData.medicationStats.approvalStats}
                />
              ) : (
                <div className="admin_ui_dash_chart-error">
                  <p>Kh√¥ng c√≥ d·ªØ li·ªáu ph√™ duy·ªát thu·ªëc</p>
                  <button
                    onClick={() =>
                      window.dashboardService?.testMedicationInstructionsAPI?.()
                    }
                    style={{
                      fontSize: "12px",
                      padding: "4px 8px",
                      marginTop: "8px",
                    }}
                  >
                    Test API
                  </button>
                </div>
              )}
            </div>
          </div>

          <div className="admin_ui_dash_chart-card">
            <div className="admin_ui_dash_chart-header">
              <h3>Tr·∫°ng th√°i s·ª≠ d·ª•ng thu·ªëc</h3>
              {dashboardData.medicationStats && (
                <span className="admin_ui_dash_chart-subtitle">
                  T·ªïng: {dashboardData.medicationStats.consumptionStats.total}{" "}
                  thu·ªëc
                </span>
              )}
            </div>
            <div className="admin_ui_dash_chart-content">
              {loading ? (
                <div className="admin_ui_dash_chart-loading">ƒêang t·∫£i...</div>
              ) : dashboardData.medicationStats?.consumptionStats?.total > 0 ? (
                <MedicationConsumptionStatusChart
                  data={dashboardData.medicationStats.consumptionStats}
                />
              ) : (
                <div className="admin_ui_dash_chart-error">
                  <p>Kh√¥ng c√≥ d·ªØ li·ªáu s·ª≠ d·ª•ng thu·ªëc</p>
                  <span style={{ fontSize: "10px", color: "#666" }}>
                    (Ch·ªâ hi·ªÉn th·ªã khi c√≥ thu·ªëc ƒë√£ ƒë∆∞·ª£c s·ª≠ d·ª•ng)
                  </span>
                </div>
              )}
            </div>
          </div>
        </div>

        {/* H√†ng 6: BMI Chart (full width) */}
        <div className="admin_ui_dash_charts-row">
          <div className="admin_ui_dash_chart-card full-width">
            <div className="admin_ui_dash_chart-header">
              <h3>Ph√¢n b·ªë BMI theo kh·ªëi l·ªõp</h3>
              {dashboardData.bmiStats?._metadata ? (
                <span className="admin_ui_dash_chart-subtitle">
                  {/* {dashboardData.bmiStats._metadata.totalWithBMI} h·ªçc sinh c√≥ d·ªØ li·ªáu BMI / {dashboardData.bmiStats._metadata.totalCheckups} l·∫ßn kh√°m */}
                </span>
              ) : (
                <span className="admin_ui_dash_chart-subtitle">
                  Th·ªëng k√™ ch·ªâ s·ªë BMI t·ª´ k·∫øt qu·∫£ kh√°m s·ª©c kh·ªèe ƒë·ªãnh k·ª≥
                </span>
              )}
            </div>
            <div className="admin_ui_dash_chart-content large">
              {loading ? (
                <div className="admin_ui_dash_chart-loading">ƒêang t·∫£i...</div>
              ) : dashboardData.bmiStats ? (
                <BMIByGradeChart data={dashboardData.bmiStats} />
              ) : (
                <div className="admin_ui_dash_chart-error">
                  <p>Kh√¥ng c√≥ d·ªØ li·ªáu BMI theo kh·ªëi l·ªõp</p>
                  <button
                    onClick={() =>
                      window.dashboardService?.testMedicalCheckupsAPI?.()
                    }
                    style={{
                      fontSize: "12px",
                      padding: "4px 8px",
                      marginTop: "8px",
                    }}
                  >
                    Test API
                  </button>
                </div>
              )}
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Dashboard;
